{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home This pipeline starts by trimming the read files by removing reads smaller than 1,000 bp. It then proceeds to align the reads against the virus genomic reference. It processes the alignment by removing unaligned reads and converting them to a sorted binary format. Finally, it performs a variant calling step and filters the resulting variants. Some statistical commands appear throughout the pipeline to check the quality of the data or results. Usage Install Clone the repository wherever you want on your local: git clone git@gitlab.com:asfistonlavie/bill.git # by SSH git clone https://gitlab.com/asfistonlavie/bill.git # by HTTPS Run To run this Snakemake pipeline, you must be in the workflow folder or its parent folder. There are two ways to run this pipeline on a cluster (e.g NGSTC): with the srun command ( srun snakemake --cores <nb_core_max> --configfile workflow/config/config.yaml [options] <target> ), or with a cluster config ( snakemake --profile workflow/ngstc --configfile workflow/config/config.yaml [options] <target> ). There are three possible types to use in target field: (1) a file path, (2) a rule name that matches a file extension, or (3) the whole pipeline. If you just want a specific file (1), run: srun snakemake --cores <nb_core_max> --configfile workflow/config/config.yaml [options] <path/to/file> # OR snakemake --profile workflow/ngstc --configfile workflow/config/config.yaml [options] <path/to/file> It will automatically find the correct rule to run based on the file path. File names are constrained by the snakefile (see the doc for correct file name format). If you want all of a type of file (2), run : srun snakemake --cores <nb_core_max> --configfile workflow/config/config.yaml [options] <rule_name> # OR snakemake --profile workflow/ngstc --configfile workflow/config/config.yaml [options] <rule_name> It will automatically run this rule and all dependencies for all samples defined in config file (run snakemake --help for the list of available rule names). If you want to run the whole pipeline (3), run: srun snakemake --cores <nb_core_max> --configfile workflow/config/config.yaml [options] all # OR snakemake --profile workflow/ngstc --configfile workflow/config/config.yaml [options] all","title":"Home"},{"location":"#home","text":"This pipeline starts by trimming the read files by removing reads smaller than 1,000 bp. It then proceeds to align the reads against the virus genomic reference. It processes the alignment by removing unaligned reads and converting them to a sorted binary format. Finally, it performs a variant calling step and filters the resulting variants. Some statistical commands appear throughout the pipeline to check the quality of the data or results.","title":"Home"},{"location":"#usage","text":"","title":"Usage"},{"location":"#install","text":"Clone the repository wherever you want on your local: git clone git@gitlab.com:asfistonlavie/bill.git # by SSH git clone https://gitlab.com/asfistonlavie/bill.git # by HTTPS","title":"Install"},{"location":"#run","text":"To run this Snakemake pipeline, you must be in the workflow folder or its parent folder. There are two ways to run this pipeline on a cluster (e.g NGSTC): with the srun command ( srun snakemake --cores <nb_core_max> --configfile workflow/config/config.yaml [options] <target> ), or with a cluster config ( snakemake --profile workflow/ngstc --configfile workflow/config/config.yaml [options] <target> ). There are three possible types to use in target field: (1) a file path, (2) a rule name that matches a file extension, or (3) the whole pipeline. If you just want a specific file (1), run: srun snakemake --cores <nb_core_max> --configfile workflow/config/config.yaml [options] <path/to/file> # OR snakemake --profile workflow/ngstc --configfile workflow/config/config.yaml [options] <path/to/file> It will automatically find the correct rule to run based on the file path. File names are constrained by the snakefile (see the doc for correct file name format). If you want all of a type of file (2), run : srun snakemake --cores <nb_core_max> --configfile workflow/config/config.yaml [options] <rule_name> # OR snakemake --profile workflow/ngstc --configfile workflow/config/config.yaml [options] <rule_name> It will automatically run this rule and all dependencies for all samples defined in config file (run snakemake --help for the list of available rule names). If you want to run the whole pipeline (3), run: srun snakemake --cores <nb_core_max> --configfile workflow/config/config.yaml [options] all # OR snakemake --profile workflow/ngstc --configfile workflow/config/config.yaml [options] all","title":"Run"},{"location":"about/","text":"About Tool versions Tools Version snakemake v7.21.0 seqkit v2.3.0 minimap2 v2.24-r1122 samtools v1.16.1 bamCoverage v3.5.1 plotCoverage v3.5.1 sniffles2 v2.2 tabix v1.16 bgzip v1.16 bcftools v1.16 medaka v1.11.3 Contributor Arnaud Soulier ( Github profil ) Catherine Breton ( Github profil ) Emira Cherif ( Github profil ) Anna-Sophie Fiston-Lavier ( Github profil ) Publications Variant calling pipeline designed for the Bioinformatics Learning Lab (BILL: release_2023.1). Anna-Sophie Fiston-Lavier Arnaud Soulier, Aliz\u00e9e Arnoux, Catherine Breton, Emira Cherif, Zenodo. https://doi.org/10.5281/zenodo.10020027 Realease release_2023 \u2002\u2002\u2002\u2192 First release (July 2023). Use during the BILL classes January 2023. release_2023.1 \u2002\u2002\u2002\u2192 Readme update. release_2024 \u2002\u2002\u2002\u2192 Include new module to benchmark several variant callers.","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"about/#tool-versions","text":"Tools Version snakemake v7.21.0 seqkit v2.3.0 minimap2 v2.24-r1122 samtools v1.16.1 bamCoverage v3.5.1 plotCoverage v3.5.1 sniffles2 v2.2 tabix v1.16 bgzip v1.16 bcftools v1.16 medaka v1.11.3","title":"Tool versions"},{"location":"about/#contributor","text":"Arnaud Soulier ( Github profil ) Catherine Breton ( Github profil ) Emira Cherif ( Github profil ) Anna-Sophie Fiston-Lavier ( Github profil )","title":"Contributor"},{"location":"about/#publications","text":"Variant calling pipeline designed for the Bioinformatics Learning Lab (BILL: release_2023.1). Anna-Sophie Fiston-Lavier Arnaud Soulier, Aliz\u00e9e Arnoux, Catherine Breton, Emira Cherif, Zenodo. https://doi.org/10.5281/zenodo.10020027","title":"Publications"},{"location":"about/#realease","text":"","title":"Realease"},{"location":"about/#release_2023","text":"\u2192 First release (July 2023). Use during the BILL classes January 2023.","title":"release_2023"},{"location":"about/#release_20231","text":"\u2192 Readme update.","title":"release_2023.1"},{"location":"about/#release_2024","text":"\u2192 Include new module to benchmark several variant callers.","title":"release_2024"},{"location":"calling/","text":"Variant calling SNP calling medaka consensus Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule Output: HDF file (??) \u2003\u2192 used by medaka snp rule Description: \u2003 ?? medaka snp Input: HDF file (??) \u2003\u2192 provided by medaka consensus rule Fasta file (reference) Output: VCF file (SNP) \u2003\u2192 used by bcftools stats rule Description: \u2003 Call all the SNP between the sample and the reference SV calling sniffles Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule FASTA file (reference) Output: VCF file (SV) \u2003\u2192 used by bcftools stats rule Description: \u2003 Call all the SV between the sample and the reference with Sniffles tool cuteSV Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule FASTA file (reference) Output: VCF file (SV) \u2003\u2192 used by bcftools stats rule Description: \u2003 Call all the SV between the sample and the reference with cuteSV tool svim Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule FASTA file (reference) Output: VCF file (SV) \u2003\u2192 used by bcftools stats rule Description: \u2003 Call all the SV between the sample and the reference with svim tool NanoVar Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule FASTA file (reference) Output: VCF file (SV) \u2003\u2192 used by bcftools stats rule Description: \u2003 Call all the SV between the sample and the reference with NanoVar tool Statistic control bcftools stats Input: VCF file (SNP or SV) \u2003\u2192 provided by medaka snp rule \u2003\u2192 provided by sniffles rule \u2003\u2192 provided by cuteSV rule \u2003\u2192 provided by svim rule \u2003\u2192 provided by NanoVar rule Output: TXT file (VCF stats) Description: \u2003 Compute stats of the variant","title":"Variant calling"},{"location":"calling/#variant-calling","text":"","title":"Variant calling"},{"location":"calling/#snp-calling","text":"","title":"SNP calling"},{"location":"calling/#medaka-consensus","text":"Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule Output: HDF file (??) \u2003\u2192 used by medaka snp rule Description: \u2003 ??","title":"medaka consensus"},{"location":"calling/#medaka-snp","text":"Input: HDF file (??) \u2003\u2192 provided by medaka consensus rule Fasta file (reference) Output: VCF file (SNP) \u2003\u2192 used by bcftools stats rule Description: \u2003 Call all the SNP between the sample and the reference","title":"medaka snp"},{"location":"calling/#sv-calling","text":"","title":"SV calling"},{"location":"calling/#sniffles","text":"Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule FASTA file (reference) Output: VCF file (SV) \u2003\u2192 used by bcftools stats rule Description: \u2003 Call all the SV between the sample and the reference with Sniffles tool","title":"sniffles"},{"location":"calling/#cutesv","text":"Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule FASTA file (reference) Output: VCF file (SV) \u2003\u2192 used by bcftools stats rule Description: \u2003 Call all the SV between the sample and the reference with cuteSV tool","title":"cuteSV"},{"location":"calling/#svim","text":"Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule FASTA file (reference) Output: VCF file (SV) \u2003\u2192 used by bcftools stats rule Description: \u2003 Call all the SV between the sample and the reference with svim tool","title":"svim"},{"location":"calling/#nanovar","text":"Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule FASTA file (reference) Output: VCF file (SV) \u2003\u2192 used by bcftools stats rule Description: \u2003 Call all the SV between the sample and the reference with NanoVar tool","title":"NanoVar"},{"location":"calling/#statistic-control","text":"","title":"Statistic control"},{"location":"calling/#bcftools-stats","text":"Input: VCF file (SNP or SV) \u2003\u2192 provided by medaka snp rule \u2003\u2192 provided by sniffles rule \u2003\u2192 provided by cuteSV rule \u2003\u2192 provided by svim rule \u2003\u2192 provided by NanoVar rule Output: TXT file (VCF stats) Description: \u2003 Compute stats of the variant","title":"bcftools stats"},{"location":"mapping/","text":"Read mapping Mapping minimap2 Input: FASTQ || compressed FASTQ file (trimed reads) \u2003\u2192 provided by seqkit seq rule FASTA file (reference) Output: SAM file (mapping) \u2003\u2192 used by samtools view rule \u2003\u2192 used by samtools flagstat rule Description: \u2003Mapped the reads on the reference provided. Default options: --MD \u2192 output the MD tag -a \u2192 choose SAM as output format -x map-ont \u2192 choose Nanopore vs reference mapping samtools view Input: SAM file (mapping) \u2003\u2192 provided by minimap2 rule Output: BAM file (mapped reads) \u2003\u2192 used by samtools sort rule Description: \u2003Convert the mapping file in binary format et remove unmapped reads Default options: -b \u2192 convert output in BAM format -h \u2192 include header -S \u2192 input format is auto-detected -F 4 \u2192 exclude flags 4 (unmapped reads) samtools sort Input: BAM file (mapped reads) \u2003\u2192 provided by samtools view rule Output: BAM file (mapped & sorted reads) \u2003\u2192 used by samtools index rule \u2003\u2192 used by medaka consensus rule \u2003\u2192 used by sniffles rule \u2003\u2192 used by cuteSV rule \u2003\u2192 used by svim rule \u2003\u2192 used by NanoVar rule \u2003\u2192 used by bamCoverage rule \u2003\u2192 used by plotCoverage rule Description: \u2003Sort mapped reads Default options: -l 9 \u2192 set compression to best level Indexing samtools index Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule Output: BAI file (mapped & sorted index) \u2003\u2192 used by medaka consensus rule \u2003\u2192 used by sniffles rule \u2003\u2192 used by cuteSV rule \u2003\u2192 used by svim rule \u2003\u2192 used by NanoVar rule \u2003\u2192 used by bamCoverage rule \u2003\u2192 used by plotCoverage rule Description: \u2003Create a index of the mapped & sorted BAM file Statistic control samtools flagstat Input: SAM file (mapping) \u2003\u2192 provided by minimap2 rule Output: TXT file (flagstat) Description: \u2003Compute the mapping statistics bamCoverage Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule Output: bedgraph file (coverage file) Description: \u2003Compute the bedgraph of the sample mapping Default options: --normalizeUsing RPGC \u2192 Choose the RPGC method to normalize number of reads per bin -of bedgraph \u2192 Choose bedgraph as output file type plotCoverage Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule Output: PDF file (depth plot) Description: \u2003Create the plot of the coverage for the sample mapping. Default options: --smartLabels \u2192 use file name as labels --plotFileFormat pdf \u2192 choose pdf as output format","title":"Mapping"},{"location":"mapping/#read-mapping","text":"","title":"Read mapping"},{"location":"mapping/#mapping","text":"","title":"Mapping"},{"location":"mapping/#minimap2","text":"Input: FASTQ || compressed FASTQ file (trimed reads) \u2003\u2192 provided by seqkit seq rule FASTA file (reference) Output: SAM file (mapping) \u2003\u2192 used by samtools view rule \u2003\u2192 used by samtools flagstat rule Description: \u2003Mapped the reads on the reference provided. Default options: --MD \u2192 output the MD tag -a \u2192 choose SAM as output format -x map-ont \u2192 choose Nanopore vs reference mapping","title":"minimap2"},{"location":"mapping/#samtools-view","text":"Input: SAM file (mapping) \u2003\u2192 provided by minimap2 rule Output: BAM file (mapped reads) \u2003\u2192 used by samtools sort rule Description: \u2003Convert the mapping file in binary format et remove unmapped reads Default options: -b \u2192 convert output in BAM format -h \u2192 include header -S \u2192 input format is auto-detected -F 4 \u2192 exclude flags 4 (unmapped reads)","title":"samtools view"},{"location":"mapping/#samtools-sort","text":"Input: BAM file (mapped reads) \u2003\u2192 provided by samtools view rule Output: BAM file (mapped & sorted reads) \u2003\u2192 used by samtools index rule \u2003\u2192 used by medaka consensus rule \u2003\u2192 used by sniffles rule \u2003\u2192 used by cuteSV rule \u2003\u2192 used by svim rule \u2003\u2192 used by NanoVar rule \u2003\u2192 used by bamCoverage rule \u2003\u2192 used by plotCoverage rule Description: \u2003Sort mapped reads Default options: -l 9 \u2192 set compression to best level","title":"samtools sort"},{"location":"mapping/#indexing","text":"","title":"Indexing"},{"location":"mapping/#samtools-index","text":"Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule Output: BAI file (mapped & sorted index) \u2003\u2192 used by medaka consensus rule \u2003\u2192 used by sniffles rule \u2003\u2192 used by cuteSV rule \u2003\u2192 used by svim rule \u2003\u2192 used by NanoVar rule \u2003\u2192 used by bamCoverage rule \u2003\u2192 used by plotCoverage rule Description: \u2003Create a index of the mapped & sorted BAM file","title":"samtools index"},{"location":"mapping/#statistic-control","text":"","title":"Statistic control"},{"location":"mapping/#samtools-flagstat","text":"Input: SAM file (mapping) \u2003\u2192 provided by minimap2 rule Output: TXT file (flagstat) Description: \u2003Compute the mapping statistics","title":"samtools flagstat"},{"location":"mapping/#bamcoverage","text":"Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule Output: bedgraph file (coverage file) Description: \u2003Compute the bedgraph of the sample mapping Default options: --normalizeUsing RPGC \u2192 Choose the RPGC method to normalize number of reads per bin -of bedgraph \u2192 Choose bedgraph as output file type","title":"bamCoverage"},{"location":"mapping/#plotcoverage","text":"Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule Output: PDF file (depth plot) Description: \u2003Create the plot of the coverage for the sample mapping. Default options: --smartLabels \u2192 use file name as labels --plotFileFormat pdf \u2192 choose pdf as output format","title":"plotCoverage"}]}