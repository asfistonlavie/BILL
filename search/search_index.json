{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home R\u00e9sum\u00e9 Use Tool versions Contributor Realease","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#resume","text":"","title":"R\u00e9sum\u00e9"},{"location":"#use","text":"","title":"Use"},{"location":"#tool-versions","text":"","title":"Tool versions"},{"location":"#contributor","text":"","title":"Contributor"},{"location":"#realease","text":"","title":"Realease"},{"location":"about/","text":"About.md","title":"About"},{"location":"about/#aboutmd","text":"","title":"About.md"},{"location":"calling/","text":"Structural Variant calling SNP calling medaka consensus medaka snp SV calling sniffles cuteSV svim NanoVar Statistic control bcftools stats","title":"Structural Variant calling"},{"location":"calling/#structural-variant-calling","text":"","title":"Structural Variant calling"},{"location":"calling/#snp-calling","text":"","title":"SNP calling"},{"location":"calling/#medaka-consensus","text":"","title":"medaka consensus"},{"location":"calling/#medaka-snp","text":"","title":"medaka snp"},{"location":"calling/#sv-calling","text":"","title":"SV calling"},{"location":"calling/#sniffles","text":"","title":"sniffles"},{"location":"calling/#cutesv","text":"","title":"cuteSV"},{"location":"calling/#svim","text":"","title":"svim"},{"location":"calling/#nanovar","text":"","title":"NanoVar"},{"location":"calling/#statistic-control","text":"","title":"Statistic control"},{"location":"calling/#bcftools-stats","text":"","title":"bcftools stats"},{"location":"mapping/","text":"Read mapping Mapping minimap2 Input: Fastq || fastq.gz file (trimed reads) \u2003\u2192 provided by seqkit seq rule Fasta file (reference) Output: SAM file (mapping) \u2003\u2192 used by samtools view rule \u2003\u2192 used by samtools flagstat rule Description: \u2003Mapped the reads on the reference provided. Default options: --MD \u2192 output the MD tag -a \u2192 choose SAM as output format -x map-ont \u2192 choose Nanopore vs reference mapping samtools view Input: SAM file (mapping) \u2003\u2192 provided by minimap2 rule Output: BAM file (mapped reads) \u2003\u2192 used by samtools sort rule Description: \u2003Convert the mapping file in binary format et remove unmapped reads Default options: -b \u2192 convert output in BAM format -h \u2192 include header -S \u2192 input format is auto-detected -F 4 \u2192 exclude flags 4 (unmapped reads) samtools sort Input: BAM file (mapped reads) \u2003\u2192 provided by samtools view rule Output: BAM file (mapped & sorted reads) \u2003\u2192 used by samtools index rule \u2003\u2192 used by medaka consensus rule \u2003\u2192 used by sniffles rule \u2003\u2192 used by cuteSV rule \u2003\u2192 used by svim rule \u2003\u2192 used by NanoVar rule \u2003\u2192 used by bamCoverage rule \u2003\u2192 used by plotCoverage rule Description: \u2003Sort mapped reads Default options: -l 9 \u2192 set compression to best level Indexing samtools index Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule Output: BAI file (mapped & sorted index) \u2003\u2192 used by medaka consensus rule \u2003\u2192 used by sniffles rule \u2003\u2192 used by cuteSV rule \u2003\u2192 used by svim rule \u2003\u2192 used by NanoVar rule \u2003\u2192 used by bamCoverage rule \u2003\u2192 used by plotCoverage rule Description: \u2003Create a index of the mapped & sorted BAM file Statistic control samtools flagstat Input: SAM file (mapping) \u2003\u2192 provided by minimap2 rule Output: flagstat file Description: \u2003Compute the mapping statistics bamCoverage Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule Output: bedgraph file (coverage file) Description: \u2003Compute the bedgraph of the sample mapping Default options: --normalizeUsing RPGC \u2192 Choose the RPGC method to normalize number of reads per bin -of bedgraph \u2192 Choose bedgraph as output file type plotCoverage Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule Output: PDF file (depth plot) Description: \u2003Create the plot of the coverage for the sample mapping. Default options: --smartLabels \u2192 use file name as labels --plotFileFormat pdf \u2192 choose pdf as output format","title":"Mapping"},{"location":"mapping/#read-mapping","text":"","title":"Read mapping"},{"location":"mapping/#mapping","text":"","title":"Mapping"},{"location":"mapping/#minimap2","text":"Input: Fastq || fastq.gz file (trimed reads) \u2003\u2192 provided by seqkit seq rule Fasta file (reference) Output: SAM file (mapping) \u2003\u2192 used by samtools view rule \u2003\u2192 used by samtools flagstat rule Description: \u2003Mapped the reads on the reference provided. Default options: --MD \u2192 output the MD tag -a \u2192 choose SAM as output format -x map-ont \u2192 choose Nanopore vs reference mapping","title":"minimap2"},{"location":"mapping/#samtools-view","text":"Input: SAM file (mapping) \u2003\u2192 provided by minimap2 rule Output: BAM file (mapped reads) \u2003\u2192 used by samtools sort rule Description: \u2003Convert the mapping file in binary format et remove unmapped reads Default options: -b \u2192 convert output in BAM format -h \u2192 include header -S \u2192 input format is auto-detected -F 4 \u2192 exclude flags 4 (unmapped reads)","title":"samtools view"},{"location":"mapping/#samtools-sort","text":"Input: BAM file (mapped reads) \u2003\u2192 provided by samtools view rule Output: BAM file (mapped & sorted reads) \u2003\u2192 used by samtools index rule \u2003\u2192 used by medaka consensus rule \u2003\u2192 used by sniffles rule \u2003\u2192 used by cuteSV rule \u2003\u2192 used by svim rule \u2003\u2192 used by NanoVar rule \u2003\u2192 used by bamCoverage rule \u2003\u2192 used by plotCoverage rule Description: \u2003Sort mapped reads Default options: -l 9 \u2192 set compression to best level","title":"samtools sort"},{"location":"mapping/#indexing","text":"","title":"Indexing"},{"location":"mapping/#samtools-index","text":"Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule Output: BAI file (mapped & sorted index) \u2003\u2192 used by medaka consensus rule \u2003\u2192 used by sniffles rule \u2003\u2192 used by cuteSV rule \u2003\u2192 used by svim rule \u2003\u2192 used by NanoVar rule \u2003\u2192 used by bamCoverage rule \u2003\u2192 used by plotCoverage rule Description: \u2003Create a index of the mapped & sorted BAM file","title":"samtools index"},{"location":"mapping/#statistic-control","text":"","title":"Statistic control"},{"location":"mapping/#samtools-flagstat","text":"Input: SAM file (mapping) \u2003\u2192 provided by minimap2 rule Output: flagstat file Description: \u2003Compute the mapping statistics","title":"samtools flagstat"},{"location":"mapping/#bamcoverage","text":"Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule Output: bedgraph file (coverage file) Description: \u2003Compute the bedgraph of the sample mapping Default options: --normalizeUsing RPGC \u2192 Choose the RPGC method to normalize number of reads per bin -of bedgraph \u2192 Choose bedgraph as output file type","title":"bamCoverage"},{"location":"mapping/#plotcoverage","text":"Input: BAM file (mapped & sorted reads) \u2003\u2192 provided by samtools sort rule BAI file (mapped & sorted index) \u2003\u2192 provided by samtools index rule Output: PDF file (depth plot) Description: \u2003Create the plot of the coverage for the sample mapping. Default options: --smartLabels \u2192 use file name as labels --plotFileFormat pdf \u2192 choose pdf as output format","title":"plotCoverage"},{"location":"preprocessing/","text":"Preprocessing Quality control pycoQC Fastq concatenation cat Raw read triming seqkit seq Statistics control seqkit stats","title":"Preprocessing"},{"location":"preprocessing/#preprocessing","text":"","title":"Preprocessing"},{"location":"preprocessing/#quality-control","text":"","title":"Quality control"},{"location":"preprocessing/#pycoqc","text":"","title":"pycoQC"},{"location":"preprocessing/#fastq-concatenation","text":"","title":"Fastq concatenation"},{"location":"preprocessing/#cat","text":"","title":"cat"},{"location":"preprocessing/#raw-read-triming","text":"","title":"Raw read triming"},{"location":"preprocessing/#seqkit-seq","text":"","title":"seqkit seq"},{"location":"preprocessing/#statistics-control","text":"","title":"Statistics control"},{"location":"preprocessing/#seqkit-stats","text":"","title":"seqkit stats"}]}